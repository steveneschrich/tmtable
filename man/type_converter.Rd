% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/types.R
\name{type_converter}
\alias{type_converter}
\title{Function Factory for Type Conversion}
\usage{
type_converter(x)
}
\arguments{
\item{x}{A single value, list, or vector of values to determine the conversion function for.}
}
\value{
A function that converts arguments to the matched type (e.g, \code{\link[base:character]{base::as.character()}})
}
\description{
A variable can contain any type of value such as logical, numeric or character. This
function determines the type of a variable and returns the \code{as.type()} function corresponding
to that type.
}
\details{
Variables can contain different types and there is sometimes a need to create other variables
of the same type. There are probably better ways to do this in R, but this approach is to simply
inspect the variable type and use the corresponding \code{as.type()} function.

This is (currently) a brittle function as there are only a few different types defined:
\itemize{
\item character
\item logical
\item numeric
\item Date
\item POSIXct
}

The default type converter (if the type is supported) is currently just \verb{[base::as.character()]}.
}
\examples{
\dontrun{
  # This returns `as.numeric()`
  type_converter(1)
}
}
